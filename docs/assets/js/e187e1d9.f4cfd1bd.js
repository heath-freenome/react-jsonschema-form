"use strict";(self.webpackChunk_rjsf_docs=self.webpackChunk_rjsf_docs||[]).push([[9652],{3636:(e,n,r)=>{r.d(n,{Iu:()=>l,yg:()=>y});var t=r(5668);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,y=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return r?t.createElement(y,i(i({ref:n},l),{},{components:r})):t.createElement(y,i({ref:n},l))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5115:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var t=r(5307),a=(r(5668),r(3636));const o={},i="Objects",p={unversionedId:"json-schema/objects",id:"json-schema/objects",title:"Objects",description:"Object properties",source:"@site/docs/json-schema/objects.md",sourceDirName:"json-schema",slug:"/json-schema/objects",permalink:"/react-jsonschema-form/docs/json-schema/objects",draft:!1,editUrl:"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/docs/json-schema/objects.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Dependencies",permalink:"/react-jsonschema-form/docs/json-schema/dependencies"},next:{title:"oneOf, anyOf, and allOf",permalink:"/react-jsonschema-form/docs/json-schema/oneof"}},s={},c=[{value:"Object properties",id:"object-properties",level:2},{value:"Required properties",id:"required-properties",level:2},{value:"Specifying property order",id:"specifying-property-order",level:2},{value:"Additional properties",id:"additional-properties",level:2},{value:"<code>expandable</code> option",id:"expandable-option",level:3}],l={toc:c},d="wrapper";function m(e){let{components:n,...r}=e;return(0,a.yg)(d,(0,t.c)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"objects"},"Objects"),(0,a.yg)("h2",{id:"object-properties"},"Object properties"),(0,a.yg)("p",null,"Objects are defined with a type equal to ",(0,a.yg)("inlineCode",{parentName:"p"},"object")," and properties specified in the ",(0,a.yg)("inlineCode",{parentName:"p"},"properties")," keyword."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import { RJSFSchema } from '@rjsf/utils';\nimport validator from '@rjsf/validator-ajv8';\n\nconst schema: RJSFSchema = {\n  title: 'My title',\n  description: 'My description',\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n    },\n    age: {\n      type: 'number',\n    },\n  },\n};\n\nrender(<Form schema={schema} validator={validator} />, document.getElementById('app'));\n")),(0,a.yg)("h2",{id:"required-properties"},"Required properties"),(0,a.yg)("p",null,"You can specify which properties are required using the ",(0,a.yg)("inlineCode",{parentName:"p"},"required")," attribute:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import { RJSFSchema } from '@rjsf/utils';\nimport validator from '@rjsf/validator-ajv8';\n\nconst schema: RJSFSchema = {\n  title: 'My title',\n  description: 'My description',\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n    },\n    age: {\n      type: 'number',\n    },\n  },\n  required: ['name'],\n};\n\nrender(<Form schema={schema} validator={validator} />, document.getElementById('app'));\n")),(0,a.yg)("h2",{id:"specifying-property-order"},"Specifying property order"),(0,a.yg)("p",null,"Since the order of object properties in Javascript and JSON is not guaranteed, the ",(0,a.yg)("inlineCode",{parentName:"p"},"uiSchema")," object spec allows you to define the order in which properties are rendered using the ",(0,a.yg)("inlineCode",{parentName:"p"},"ui:order")," property:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import { RJSFSchema, UiSchema } from '@rjsf/utils';\nimport validator from '@rjsf/validator-ajv8';\n\nconst schema: RJSFSchema = {\n  type: 'object',\n  properties: {\n    foo: { type: 'string' },\n    bar: { type: 'string' },\n  },\n};\n\nconst uiSchema: UiSchema = {\n  'ui:order': ['bar', 'foo'],\n};\n\nrender(<Form schema={schema} uiSchema={uiSchema} validator={validator} />, document.getElementById('app'));\n")),(0,a.yg)("p",null,"If a guaranteed fixed order is only important for some fields, you can insert a wildcard ",(0,a.yg)("inlineCode",{parentName:"p"},'"*"')," item in your ",(0,a.yg)("inlineCode",{parentName:"p"},"ui:order")," definition. All fields that are not referenced explicitly anywhere in the list will be rendered at that point:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"import { UiSchema } from '@rjsf/utils';\n\nconst uiSchema: UiSchema = {\n  'ui:order': ['bar', '*'],\n};\n")),(0,a.yg)("h2",{id:"additional-properties"},"Additional properties"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"additionalProperties")," keyword allows the user to add properties with arbitrary key names. Set this keyword equal to a schema object:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"import { RJSFSchema } from '@rjsf/utils';\nimport validator from '@rjsf/validator-ajv8';\n\nconst schema: RJSFSchema = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string',\n    },\n  },\n  additionalProperties: {\n    type: 'number',\n    enum: [1, 2, 3],\n  },\n};\n\nrender(<Form schema={schema} validator={validator} />, document.getElementById('app'));\n")),(0,a.yg)("p",null,"In this way, an add button for new properties is shown by default."),(0,a.yg)("p",null,"You can also define ",(0,a.yg)("inlineCode",{parentName:"p"},"uiSchema")," options for ",(0,a.yg)("inlineCode",{parentName:"p"},"additionalProperties")," by setting the ",(0,a.yg)("inlineCode",{parentName:"p"},"additionalProperties")," attribute in the ",(0,a.yg)("inlineCode",{parentName:"p"},"uiSchema"),"."),(0,a.yg)("h3",{id:"expandable-option"},(0,a.yg)("inlineCode",{parentName:"h3"},"expandable")," option"),(0,a.yg)("p",null,"You can turn support for ",(0,a.yg)("inlineCode",{parentName:"p"},"additionalProperties")," off with the ",(0,a.yg)("inlineCode",{parentName:"p"},"expandable")," option in ",(0,a.yg)("inlineCode",{parentName:"p"},"uiSchema"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"import { UiSchema } from '@rjsf/utils';\n\nconst uiSchema: UiSchema = {\n  'ui:options': {\n    expandable: false,\n  },\n};\n")))}m.isMDXComponent=!0}}]);